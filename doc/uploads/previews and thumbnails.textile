
h1. Preview and Thumbnails

To create previews of files, we are using a utility application called "clippy"

h2. Preview creation via "clippy"

To create previews of files we use an OS X command line application called "Clippy"
It is Dougal's first attempt at writing an application in C. 
Basically all it does is call a OS X api to create a preview of the file.


h3. Usage 

Usage: Clipper /path/to/input/file 
	[-s Size of thumbnail] 
	[-o Directory or file to write result to ] 
	[-h Display this message]


*Please note* 
* The first argument is expected to be the path to the target file. "Clippy" was built with the sole purpose of being called from an application such as house, so I don't feel it needs to be super smart about how it parses arguments. (as humans aren't really going to interface with it)


h3. Benefits

"Clippy" is less than 1Mb in size and has no external dependencies (aside from running on a Mac with 10.5+)
By being independent, we can call it to create thumbnails out of the Rails ecosystem.

Why not write "Clippy" in ruby, and have the OS X specific part as a C extension?
Because it's too darn hard, and will use more memory _(some of the files it will crunch are going to be ~500Mb in size)_

h3. Don't expect to always get a preview

You are not assured to get a file back from Clippy. We aren't able to create previews of all files.
The follow files won't return a preview
* Archives eg: zip, gz
* postscript documents



h2. Thumbnail creation

Since we are tied to the Mac, we're using the "scriptable image processing system" (SIPS). 
"This tool is used to query or modify raster image files and ColorSync ICC profiles.
Its functionality can also be used through the "Image Events" AppleScript suite" -- from the manual

All thumbnails are created from the previews created by "Clipper", whos output is either png or jpg images.
Don't blindly expect a preview to be generated from the file. _see above_


h3. Benefits

* Built into OS X, one less thing to install
* Is hardware accelerated
* very simple to use
* fast fast 



h3. Usage

Sips doesn't do "anything fancy" with images. 
Arguments outlined below. (edited to remove items we don't use)

sips [image modification functions] imagefile ... 
     [--out result-file-or-dir] 

Image modification functions: 
	-s, --setProperty key value 
	-d, --deleteProperty key 
	-e, --embedProfile profile 
	-E, --embedProfileIfNone profile 
	-m, --matchTo profile 
	-M, --matchToWithIntent profile intent 
	    --deleteColorManagementProperties 
	-r, --rotate degreesCW 
	-f, --flip horizontal|vertical 
	-c, --cropToHeightWidth pixelsH pixelsW 
	-p, --padToHeightWidth pixelsH pixelsW 
	    --padColor hexcolor 
	-z, --resampleHeightWidth pixelsH pixelsW 
	    --resampleWidth pixelsW 
	    --resampleHeight pixelsH 
	-Z, --resampleHeightWidthMax pixelsWH 
	-i, --addIcon 







